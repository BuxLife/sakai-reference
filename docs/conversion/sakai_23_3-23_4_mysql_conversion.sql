
-- Begin SAK-50526
ALTER TABLE CONV_TOPIC_STATUS ADD UPVOTED BIT NULL;
UPDATE CONV_TOPIC_STATUS SET UPVOTED = b'0' WHERE UPVOTED IS NULL;

ALTER TABLE CONV_POSTS ADD NUMBER_OF_THREAD_UPVOTES INT DEFAULT null NULL;
UPDATE CONV_POSTS SET NUMBER_OF_THREAD_UPVOTES = 0 WHERE NUMBER_OF_THREAD_UPVOTES IS NULL;

ALTER TABLE CONV_POSTS ADD REACTION_COUNT INT DEFAULT null NULL;
UPDATE CONV_POSTS SET REACTION_COUNT = 0 WHERE REACTION_COUNT IS NULL;

ALTER TABLE CONV_TOPICS ADD UPVOTES INT DEFAULT null NULL;
UPDATE CONV_TOPICS SET UPVOTES = 0 WHERE UPVOTES IS NULL;

-- Step 1: Drop the unique index
ALTER TABLE CONV_POST_REACTIONS DROP INDEX UniquePostReactions;

-- Step 2: Run the original CASE update
UPDATE CONV_POST_REACTIONS
SET REACTION = CASE REACTION
    WHEN 0 THEN 2  -- GOOD_QUESTION → GOOD_IDEA
    WHEN 1 THEN 2  -- GOOD_ANSWER → GOOD_IDEA
    WHEN 2 THEN 1  -- LOVE_IT → 1
    WHEN 3 THEN 2  -- GOOD_IDEA → 2
    WHEN 4 THEN 3  -- KEY → 3
    ELSE REACTION
END;

-- Step 3: Remove duplicates, keeping the row with the lowest ID
DELETE t1 FROM CONV_POST_REACTIONS t1
  INNER JOIN CONV_POST_REACTIONS t2
  WHERE t1.POST_ID = t2.POST_ID
  AND t1.USER_ID = t2.USER_ID
  AND t1.REACTION = t2.REACTION
  AND t1.ID > t2.ID;

-- Step 4: Re-add the unique index
ALTER TABLE CONV_POST_REACTIONS ADD UNIQUE KEY UniquePostReactions (POST_ID, USER_ID, REACTION);

-- Now do topics
ALTER TABLE CONV_TOPIC_REACTIONS DROP INDEX UniqueTopicReactions;

UPDATE CONV_TOPIC_REACTIONS
SET REACTION = CASE REACTION
    WHEN 0 THEN 2  -- GOOD_QUESTION → GOOD_IDEA
    WHEN 1 THEN 2  -- GOOD_ANSWER → GOOD_IDEA
    WHEN 2 THEN 1  -- LOVE_IT → 1
    WHEN 3 THEN 2  -- GOOD_IDEA → 2
    WHEN 4 THEN 3  -- KEY → 3
    ELSE REACTION
END;

DELETE t1 FROM CONV_TOPIC_REACTIONS t1
  INNER JOIN CONV_TOPIC_REACTIONS t2
  WHERE t1.TOPIC_ID = t2.TOPIC_ID
  AND t1.USER_ID = t2.USER_ID
  AND t1.REACTION = t2.REACTION
  AND t1.ID > t2.ID;

ALTER TABLE CONV_TOPIC_REACTIONS ADD UNIQUE KEY UniqueTopicReactions (TOPIC_ID, USER_ID, REACTION);

-- Now post totals
ALTER TABLE CONV_POST_REACTION_TOTALS DROP INDEX UniquePostReactionTotals;

UPDATE CONV_POST_REACTION_TOTALS
SET REACTION = CASE REACTION
    WHEN 0 THEN 2  -- GOOD_QUESTION → GOOD_IDEA
    WHEN 1 THEN 2  -- GOOD_ANSWER → GOOD_IDEA
    WHEN 2 THEN 1  -- LOVE_IT → 1
    WHEN 3 THEN 2  -- GOOD_IDEA → 2
    WHEN 4 THEN 3  -- KEY → 3
    ELSE REACTION
END;

DELETE t1 FROM CONV_POST_REACTION_TOTALS t1
  INNER JOIN CONV_POST_REACTION_TOTALS t2
  WHERE t1.POST_ID = t2.POST_ID
  AND t1.REACTION = t2.REACTION
  AND t1.ID > t2.ID;

ALTER TABLE CONV_POST_REACTION_TOTALS ADD UNIQUE KEY UniquePostReactionTotals (POST_ID, REACTION);

-- Now topic totals
ALTER TABLE CONV_TOPIC_REACTION_TOTALS DROP INDEX UniqueTopicReactionTotals;

UPDATE CONV_TOPIC_REACTION_TOTALS
SET REACTION = CASE REACTION
    WHEN 0 THEN 2  -- GOOD_QUESTION → GOOD_IDEA
    WHEN 1 THEN 2  -- GOOD_ANSWER → GOOD_IDEA
    WHEN 2 THEN 1  -- LOVE_IT → 1
    WHEN 3 THEN 2  -- GOOD_IDEA → 2
    WHEN 4 THEN 3  -- KEY → 3
    ELSE REACTION
END;

DELETE t1 FROM CONV_TOPIC_REACTION_TOTALS t1
  INNER JOIN CONV_TOPIC_REACTION_TOTALS t2
  WHERE t1.TOPIC_ID = t2.TOPIC_ID
  AND t1.REACTION = t2.REACTION
  AND t1.ID > t2.ID;

ALTER TABLE CONV_TOPIC_REACTION_TOTALS ADD UNIQUE KEY UniqueTopicReactionTotals (TOPIC_ID, REACTION);
-- End SAK-50526

-- SAK-50829
ALTER TABLE PLUS_SCORE RENAME COLUMN COMMENT TO SCORE_COMMENT;
-- END SAK-50829

-- SAK-50498
ALTER TABLE CONV_COMMENTS MODIFY MESSAGE LONGTEXT;
-- END SAK-50498
