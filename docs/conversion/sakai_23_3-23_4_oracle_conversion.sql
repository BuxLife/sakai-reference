-- Begin SAK-50526
ALTER TABLE CONV_TOPICS ADD UPVOTES NUMBER(10) DEFAULT 0;
ALTER TABLE CONV_TOPIC_STATUS ADD UPVOTED NUMBER(1) DEFAULT 0;
ALTER TABLE CONV_POSTS ADD (
  NUMBER_OF_THREAD_UPVOTES NUMBER(10) DEFAULT 0,
  REACTION_COUNT NUMBER(10) DEFAULT 0
);

-- Step 1: Drop the unique constraint
ALTER TABLE CONV_POST_REACTIONS DROP CONSTRAINT UniquePostReactions;

-- Step 2: Apply the CASE update
UPDATE CONV_POST_REACTIONS
SET REACTION = CASE REACTION
    WHEN 0 THEN 2  -- GOOD_QUESTION → GOOD_IDEA
    WHEN 1 THEN 2  -- GOOD_ANSWER → GOOD_IDEA
    WHEN 2 THEN 1  -- LOVE_IT → 1
    WHEN 3 THEN 2  -- GOOD_IDEA → 2
    WHEN 4 THEN 3  -- KEY → 3
    ELSE REACTION
END;

-- Step 3: Remove duplicates using Oracle's syntax
DELETE FROM CONV_POST_REACTIONS a 
WHERE a.ROWID > (
    SELECT MIN(b.ROWID)
    FROM CONV_POST_REACTIONS b
    WHERE a.POST_ID = b.POST_ID 
    AND a.USER_ID = b.USER_ID 
    AND a.REACTION = b.REACTION
);

-- Step 4: Re-add the unique constraint
ALTER TABLE CONV_POST_REACTIONS ADD CONSTRAINT UniquePostReactions UNIQUE (POST_ID, USER_ID, REACTION);

-- Now do topics
ALTER TABLE CONV_TOPIC_REACTIONS DROP CONSTRAINT UniqueTopicReactions;

-- Step 2: Apply the CASE update
UPDATE CONV_TOPIC_REACTIONS
SET REACTION = CASE REACTION
    WHEN 0 THEN 2  -- GOOD_QUESTION → GOOD_IDEA
    WHEN 1 THEN 2  -- GOOD_ANSWER → GOOD_IDEA
    WHEN 2 THEN 1  -- LOVE_IT → 1
    WHEN 3 THEN 2  -- GOOD_IDEA → 2
    WHEN 4 THEN 3  -- KEY → 3
    ELSE REACTION
END;

-- Step 3: Remove duplicates using Oracle's syntax
DELETE FROM CONV_TOPIC_REACTIONS a 
WHERE a.ROWID > (
    SELECT MIN(b.ROWID)
    FROM CONV_TOPIC_REACTIONS b
    WHERE a.TOPIC_ID = b.TOPIC_ID 
    AND a.USER_ID = b.USER_ID 
    AND a.REACTION = b.REACTION
);

-- Step 4: Re-add the unique constraint
ALTER TABLE CONV_TOPIC_REACTIONS ADD CONSTRAINT UniqueTopicReactions UNIQUE (TOPIC_ID, USER_ID, REACTION);

-- Now post totals
ALTER TABLE CONV_POST_REACTION_TOTALS DROP CONSTRAINT UniquePostReactionTotals;

UPDATE CONV_POST_REACTION_TOTALS
SET REACTION = CASE REACTION
    WHEN 0 THEN 2  -- GOOD_QUESTION → GOOD_IDEA
    WHEN 1 THEN 2  -- GOOD_ANSWER → GOOD_IDEA
    WHEN 2 THEN 1  -- LOVE_IT → 1
    WHEN 3 THEN 2  -- GOOD_IDEA → 2
    WHEN 4 THEN 3  -- KEY → 3
    ELSE REACTION
END;

-- Step 3: Remove duplicates using Oracle's syntax
DELETE FROM CONV_POST_REACTION_TOTALS a 
WHERE a.ROWID > (
    SELECT MIN(b.ROWID)
    FROM CONV_POST_REACTION_TOTALS b
    WHERE a.POST_ID = b.POST_ID 
    AND a.REACTION = b.REACTION
);

-- Step 4: Re-add the unique constraint
ALTER TABLE CONV_POST_REACTION_TOTALS ADD CONSTRAINT UniquePostReactionTotals UNIQUE (POST_ID, REACTION);

-- Now topic totals
ALTER TABLE CONV_TOPIC_REACTION_TOTALS DROP CONSTRAINT UniqueTopicReactionTotals;

UPDATE CONV_TOPIC_REACTION_TOTALS
SET REACTION = CASE REACTION
    WHEN 0 THEN 2  -- GOOD_QUESTION → GOOD_IDEA
    WHEN 1 THEN 2  -- GOOD_ANSWER → GOOD_IDEA
    WHEN 2 THEN 1  -- LOVE_IT → 1
    WHEN 3 THEN 2  -- GOOD_IDEA → 2
    WHEN 4 THEN 3  -- KEY → 3
    ELSE REACTION
END;

-- Step 3: Remove duplicates using Oracle's syntax
DELETE FROM CONV_TOPIC_REACTION_TOTALS a 
WHERE a.ROWID > (
    SELECT MIN(b.ROWID)
    FROM CONV_TOPIC_REACTION_TOTALS b
    WHERE a.TOPIC_ID = b.TOPIC_ID 
    AND a.REACTION = b.REACTION
);

-- Step 4: Re-add the unique constraint
ALTER TABLE CONV_TOPIC_REACTION_TOTALS ADD CONSTRAINT UniqueTopicReactionTotals UNIQUE (TOPIC_ID, REACTION);

-- End SAK-50526

-- SAK-50829
ALTER TABLE PLUS_SCORE RENAME COLUMN COMMENT TO SCORE_COMMENT;
-- END SAK-50829

-- SAK-50498
ALTER TABLE CONV_COMMENTS MODIFY MESSAGE CLOB;
-- END SAK-50498
